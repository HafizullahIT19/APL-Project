SASS Summary 

SASS Help: https://sass-lang.com/

--------------------------------------------------------------------------------------------
Part 1 



--------------------------------------------------------------------------------------------
Part 2

sass(old version)  
scss(new version)


1- Sass with NodeJs:

    npm i -D node-sass
    npm i -g node-sass 

    node-sass -o css scss
    node-sass Output in FolderCss   AllScssFiles in The FolderScss

    "sass":"node-sass -o css scss",
    "sass-w":"node-sass -o css scss -w"



2- Sass with VSCode:

    Live Sass Compiler Setting
        1- live sass Compile

    Settings.json:

        "liveSassCompile.settings.formats": [
            {
                "format": "expanded",
                "extensionName": ".css",
                "savePath": "/css"
            }
        ],

        
        "liveSassCompile.settings.formats": [
            {
                "format": "compressed",
                "extensionName": ".min.css",
                "savePath": "/css"
            }
        ],


--------------------------------------------------------------------------------------------
Part 3

Variables

Variables are Global or Local

1- Create Variable:
        $nameVariable: valueVariable;            
        $color-primary:orange;

2- Use Variable:
        background-color: $nameVariable;         
        background-color: $color-primary;


--------------------------------------------------------------------------------------------
Part 4

Nesting and Mixin


1- Nesting
    .nav{
        ul li{}   
            
        a{ 
            &:hover{} //a:hover
        }
    }

2- Mixin  (is a method)
    Create Mixin:
        1:
        @mixin nameMixin {
            //style
        }

        2: a parameter 
        @mixin nameMixin ($nameParameter) {
            //style
            font-size: $nameParameter;
        }

        3: a parameter with parameterValue or Variable
        @mixin nameMixin ($parameter:parameterValue or Variable) {                  
            //style
            font-size: $parameter;
        }

        4: more parameters
        @mixin nameMixin($params...) {
            transition: $params;
        }

    Use Mixin:
        @include nameMixin(parameter);



Example:
    //Create 
    @mixin transition ($params...){
        transition: $params;
    }

    //Use
    &:hover{
        color: $color-primary;
        background-color: $color-secondary;

        @include transition(color 2s, background-color 4s)
    }


--------------------------------------------------------------------------------------------
Part 5

1- Extend 
2- Function 
3- Sass Methods (Functions) 
4- Placeholder selector 


1- Extend: 
    Use for takes style other Tag or class.
    Use EXtend:
        @extend nameTag or ClassName;

    Example:
        .footer h3{
            @extend h1;             // H3 in footer takes H1 styles 
        }


2-Function:
    Create Function:
        1- @function nameFunction($parameter){
            @return $parameter ....;
        }

        2- @function nameFunction($parameter:parameterValue){
            @return $parameter ....;
        }

    Use Function:
        1- nameFunction(parameter);
        2- nameFunction();              // parameterValue is default


    Example:
        //Create Function
            @function doubleFontSize1($font-size){
                @return $font-size * 2;
            }
            @function doubleFontSize2($font-size:10px){
                @return $font-size * 2;
            }

        //Use Function
            .banner p{
                font-size: doubleFontSize1(10px);
                font-size: doubleFontSize2();
            }


3- Sass have mony methods and vi can use their.
    Sass method:
        1- lighten():
            lighten($color: #000000, $amount: 0)

        2- darken():
            darken($color: #000000, $amount: 0)

        3- transparentize():
            transparentize($color: #000000, $amount: 0)

        3- mix():
            mix($color: #000000, $color: #000000, $weight: 0.5);



4- Placeholder selector:
    If you don't want, a class with style Export to Css Files
    Create:
        %nameClass{
            //style
        }

    Use:
      @extend %nameClass;

    

--------------------------------------------------------------------------------------------
Part 6